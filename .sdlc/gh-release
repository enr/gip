#!/usr/bin/env bash

set -e

TOOL_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$TOOL_SOURCE" ] ; do TOOL_SOURCE="$(readlink "$TOOL_SOURCE")"; done
SDLC_DIR="$( cd -P "$( dirname "$TOOL_SOURCE" )" && pwd )"
PRJ_HOME="$( cd -P "$( dirname "$SDLC_DIR" )" && pwd )"

source "${SDLC_DIR}/config"

# git_dirty=$(git status --porcelain)
# [[ -n "$git_dirty" ]] && {
#   echo 'uncommitted changes detected: aborting release'
#   exit 1
# }

[[ -z "$GH_TOKEN" ]] && {
  echo "Missing GH_TOKEN"
  exit 1
}

[[ -z "$REPO_OWNER" ]] && {
  echo "no gh owner"
  exit 1
}
[[ -z "$REPO_NAME" ]] && {
  echo "no gh repo"
  exit 1
}

if [ -z "$APP_VERSION" ]; then
  echo 'no release version supplied. $APP_VERSION expected'
  exit 1
fi

command -v ghr >/dev/null || {
  go get -u github.com/tcnksm/ghr
}

RELEASE_VERSION="v$APP_VERSION"

if [ "$1" = "--prod" ]; then
  PRERELEASE=''
else
  PRERELEASE='--prerelease'
fi

echo "Release $PRJ_HOME version $RELEASE_VERSION $PRERELEASE"

"${SDLC_DIR}/build-dist"

[[ -z "$DIST_DIR" ]] && {
  echo "dist directory not found: ${DIST_DIR}"
  exit 1
}

GHR_COMMAND="ghr -t ${GH_TOKEN} -u ${REPO_OWNER} -r ${REPO_NAME} ${PRERELEASE} ${RELEASE_VERSION} ${DIST_DIR}"
echo "$GHR_COMMAND"
sh -c "$GHR_COMMAND"
